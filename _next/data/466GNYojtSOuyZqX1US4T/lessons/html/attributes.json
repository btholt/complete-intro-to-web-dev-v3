{"pageProps":{"post":{"attributes":{"description":""},"html":"<p>Attributes allow you to modify behavior of an HTML tag. You&#39;ve already seen a few of them but we&#39;ll go into a few more examples of them.</p>\n<p>A really good example we have seen already is the <code>href</code> attribute of the <code>&lt;a href=&quot;www.frontendmasters.com&quot;&gt;&lt;/a&gt;</code> tag. By modifying the href we&#39;re modifying what the tag does. It&#39;s contextual as well: <code>href</code> only works on <code>a</code> tags. You can&#39;t add a <code>href</code> to a <code>div</code> and expect to suddenly work as a link.</p>\n<p>Another one we say is the <code>type</code> attribute on the <code>input</code>. By changing the type you&#39;re changing what sort of input is being show</p>\n<pre><code class=\"hljs language-html\">&lt;!-- The default, if you leave off the type you get the &quot;text&quot; type --&gt;\n&lt;input type=&quot;text&quot; /&gt;\n\n&lt;input type=&quot;color&quot; /&gt;\n&lt;input type=&quot;file&quot; /&gt;\n&lt;input type=&quot;number&quot; /&gt;\n&lt;input type=&quot;datetime-local&quot; /&gt;\n&lt;input type=&quot;radio&quot; /&gt;\n&lt;input type=&quot;checkbox&quot; /&gt;\n</code></pre>\n<p><code>href</code> and <code>type</code> are specific to a few tags. There are other attributes like <code>class</code> and <code>id</code> that are universal and can be applied to (nearly) all tags. These themselves are inert; they don&#39;t do anything, but allow other things to find them later (we&#39;ll cover them heavily in CSS and JS sections.)</p>\n<pre><code class=\"hljs language-html\">&lt;h3 class=&quot;the-red-one&quot;&gt;This one is red&lt;/h3&gt;\n&lt;h3 class=&quot;the-blue-one&quot;&gt;This one is blue&lt;/h3&gt;\n\n&lt;style&gt;\n  /* don&#39;t worry about this yet, it&#39;s CSS */\n  .the-red-one {\n    color: red;\n  }\n\n  .the-blue-one {\n    color: blue;\n  }\n&lt;/style&gt;\n</code></pre>\n<p>Classes are more useful than IDs. You should use them 95% of the time. A class is reusable. Now I could create another tag (doesn&#39;t even have to be another h3) and that CSS style would be reapplied to it! You can also give multiple classes to one tag.</p>\n<pre><code class=\"hljs language-html\">&lt;h3 class=&quot;the-red-one bolded&quot;&gt;This is red and bold&lt;/h3&gt;\n\n&lt;style&gt;\n  .bolded {\n    font-weight: bold;\n  }\n&lt;/style&gt;\n</code></pre>\n<h2 id=\"ids\">IDs</h2>\n<p>Classes are far more useful. However there are IDs that you may need occasionally. A key thing is that an <em>ID is unique</em>. Whereas I&#39;ve already used the <code>the-red-one</code> class twice, you can&#39;t do with IDs. They&#39;re designed to not be reusable; they&#39;re unique to the page.</p>\n<p>Again, in general, even if you happen to have just one of something, it&#39;s best to just use classes for everything and more-or-less pretend that IDs are not an option at all. You really only want to use IDs when something is unique and you want to make sure it stays unique. A good example is if you have a JavaScript app that needs to put its HTML inside a specific div, you could use an ID for that (you could still use a class and some people do.)</p>\n<pre><code class=\"hljs language-html\">&lt;h3 id=&quot;brand&quot;&gt;My Site&#39;s Branding&lt;/h3&gt;\n</code></pre>\n<p>For now just use classes. It&#39;ll make everything easier.</p>\n","slug":"attributes","title":"Attributes","section":"HTML","icon":"code","filePath":"/home/runner/work/complete-intro-to-web-dev-v3/complete-intro-to-web-dev-v3/lessons/02-html/C-attributes.md","nextSlug":"/complete-intro-to-web-dev-v3/lessons/html/organizing-html","prevSlug":"/complete-intro-to-web-dev-v3/lessons/html/types-of-tags"}},"__N_SSG":true}